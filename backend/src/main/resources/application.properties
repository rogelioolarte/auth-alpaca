spring.application.name=demo
spring.profiles.active=dev

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/api_in_dev
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.secret.key=${SPRING_DATASOURCE_SECRET_KEY}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA and Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true

# Configuring Application Metrics
# management.endpoints.web.exposure.include=*
# management.endpoint.metrics.enabled=true
# management.metrics.export.prometheus.enabled=true

# JWT
app.jwtPrivateKey=${JWT_BE_PRIVATE_KEY}
app.jwtPublicKey=${JWT_BE_PUBLIC_KEY}
app.jwtUserGenerator=${SECURITY_USER_GENERATOR}
app.jwtTimeExpiration=${SECURITY_TOKEN_EXPIRATION}

app.oauth2AuthorizedRedirectURI=http://localhost:4200/oauth2/redirect
app.frontendURI=http://localhost:4200/login

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.clientId=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.clientSecret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirectUri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email, profile